import random
import zipfile
import os

def insert_dead_code(assembly_lines):
    dead_code_snippets = [
        "NOP\n",
        "MOV EAX, EAX\n",
        "XCHG EAX, EAX\n",
        "PUSH EBP\nPOP EBP\n",
        "ADD EAX, 0\n",
        "SUB EAX, 0\n",
        "LEA EAX, [EAX]\n",
        "PUSHFD\nPOPFD\n",
        "PUSHAD\nPOPAD\n",
    ]

    modified_lines = []
    for line in assembly_lines:
        modified_lines.append(line)
        if random.random() < 0.3:
            dead_code = random.choice(dead_code_snippets)
            modified_lines.append(dead_code)

    return modified_lines

def process_zipfile(input_zip, output_zip):
    with zipfile.ZipFile(input_zip, 'r') as zip_ref:
        temp_dir = 'temp_assembly_files'
        os.makedirs(temp_dir, exist_ok=True)
        zip_ref.extractall(temp_dir)

        for member in zip_ref.namelist():
            file_path = os.path.join(temp_dir, member)
            if os.path.isfile(file_path):
                with open(file_path, 'r') as file:
                    assembly_lines = file.readlines()

                modified_lines = insert_dead_code(assembly_lines)

                with open(file_path, 'w') as file:
                    file.writelines(modified_lines)

        with zipfile.ZipFile(output_zip, 'w') as new_zip:
            for foldername, subfolders, filenames in os.walk(temp_dir):
                for filename in filenames:
                    file_path = os.path.join(foldername, filename)
                    arcname = os.path.relpath(file_path, temp_dir)
                    new_zip.write(file_path, arcname)

    # Clean up the temporary directory
    for root, dirs, files in os.walk(temp_dir, topdown=False):
        for name in files:
            os.remove(os.path.join(root, name))
        for name in dirs:
            os.rmdir(os.path.join(root, name))
    os.rmdir(temp_dir)

def main():
    input_zip = 'assembly.zip'
    output_zip = 'assembly_with_dead_code.zip'

    process_zipfile(input_zip, output_zip)

    print(f"Dead code inserted. Modified zip file saved as {output_zip}")

if __name__ == "__main__":
    main()
