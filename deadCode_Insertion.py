import random
import tarfile
import os

def insert_dead_code(assembly_lines):
    dead_code_snippets = [
        "NOP\n",
        "MOV EAX, EAX\n",
        "XCHG EAX, EAX\n",
        "PUSH EBP\nPOP EBP\n",
        "ADD EAX, 0\n",
        "SUB EAX, 0\n",
        "LEA EAX, [EAX]\n",
        "PUSHFD\nPOPFD\n",
        "PUSHAD\nPOPAD\n",
        "MOV EBX, EBX\n",
        "XCHG EBX, EBX\n",
        "PUSH EBX\nPOP EBX\n",
        "ADD EBX, 0\n",
        "SUB EBX, 0\n",
        "LEA EBX, [EBX]\n",
        "PUSHF\nPOPF\n",
        "PUSHAX\nPOPAX\n",
        "MOV ECX, ECX\n",
        "XCHG ECX, ECX\n",
        "PUSH ECX\nPOP ECX\n",
        "ADD ECX, 0\n",
        "SUB ECX, 0\n",
        "LEA ECX, [ECX]\n",
        "MOV EDX, EDX\n",
        "XCHG EDX, EDX\n",
        "PUSH EDX\nPOP EDX\n",
        "ADD EDX, 0\n",
        "SUB EDX, 0\n",
        "LEA EDX, [EDX]\n",
        "NOP\nNOP\n",
        "MOV EAX, 1\nMOV EAX, 0\n",
        "ADD EAX, EAX\nSUB EAX, EAX\n",
        "MOV EBX, 1\nMOV EBX, 0\n",
        "ADD EBX, EBX\nSUB EBX, EBX\n",
        "MOV ECX, 1\nMOV ECX, 0\n",
        "ADD ECX, ECX\nSUB ECX, ECX\n",
        "MOV EDX, 1\nMOV EDX, 0\n",
        "ADD EDX, EDX\nSUB EDX, EDX\n",
        "MOV ESI, ESI\n",
        "MOV EDI, EDI\n",
        "XCHG ESI, ESI\n",
        "XCHG EDI, EDI\n",
        "PUSH ESI\nPOP ESI\n",
        "PUSH EDI\nPOP EDI\n"
    ]

    modified_lines = []
    for line in assembly_lines:
        modified_lines.append(line)
        if random.random() < 0.3:
            dead_code = random.choice(dead_code_snippets)
            modified_lines.append(dead_code)

    return modified_lines

def process_tarfile(input_tar, output_tar):
    with tarfile.open(input_tar, 'r') as tar:
        temp_dir = 'temp_assembly_files'
        os.makedirs(temp_dir, exist_ok=True)
        tar.extractall(path=temp_dir)

        for member in tar.getmembers():
            if member.isfile():
                file_path = os.path.join(temp_dir, member.name)
                with open(file_path, 'r') as file:
                    assembly_lines = file.readlines()

                modified_lines = insert_dead_code(assembly_lines)

                with open(file_path, 'w') as file:
                    file.writelines(modified_lines)

        with tarfile.open(output_tar, 'w') as new_tar:
            new_tar.add(temp_dir, arcname=os.path.basename(temp_dir))


    for root, dirs, files in os.walk(temp_dir, topdown=False):
        for name in files:
            os.remove(os.path.join(root, name))
        for name in dirs:
            os.rmdir(os.path.join(root, name))
    os.rmdir(temp_dir)

def main():
    input_tar = 'Assembly_blocks.tar.gz'
    output_tar = 'Assembly_blocks_with_dead_code.tar'

    process_tarfile(input_tar, output_tar)

    print(f"Dead code inserted. Modified tar file saved as {output_tar}")

if __name__ == "__main__":
    main()
